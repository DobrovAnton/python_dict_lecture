"""
Методы словарей:
рор() - возвращает из словаря значение, связанное с заданным ключом и удаляет эту пару
ключ/значение. Если ключ не найден, то этот метод возвращает значение по умолчанию.

popitem() - возвращает произвольно выбранную из словаря пару ключ/значение в виде кортежа
и удаляет эту пару ключ/значение из словаря

"""

from time import sleep

price = {"Бананы": 100, "Яблоки": 80, "Груши": 150, "Малина": 500}

# Удаление пары ключ/значение с помощью инструкции del
# del price["Груши"]
# print(price)
# sleep(5)

# # Вопрос: что будет если мы попытаемся удалить ключ, которого нет (del price["Черника"])?
# del price["Черника"]
# print(price)


# # Метод dict.pop() без значения по умолчанию
# value = price.pop("Малина")
# print(f"Значение, удалённое с помощью метода dict.pop(): {value}")
# print(price)


# # Метод dict.pop() со значения по умолчанию:
# value = price.pop("Клубника", 777)
# print(f"Значение, удалённое с помощью метода dict.pop с использованием значения по умолчанию: {value}")
# print(price)


# # Метод dict.pop() с обращением по несуществующему ключу без значения по умолчанию:
# value = price.pop("Арбуз")
# print(f"Значение, удалённое с помощью метода dict.pop с использованием значения по умолчанию: {value}")
# print(price)


# # Метод dict.pop() с обращением по несуществующему ключу без значения по умолчанию:
# value = price.pop("Арбуз", 952)
# print(f"Значение, удалённое с помощью метода dict.pop с использованием значения по умолчанию: {value}")
# print(price)

# todo: самостоятельно изучить метод dict.popitem()
